#include "EndpointF.tars"
module tars
{
    /** 
     * 获取对象endpoint的query接口
     */

    interface QueryF
    {
        /** 根据id获取对象
         *
         * @param id 对象名称
         *
         * @return  返回所有该对象的活动endpoint列表
         */
        vector<EndpointF> findObjectById(string id);
		
		/**根据id获取所有对象,包括活动和非活动对象
		*
         * @param id         对象名称
         * @param activeEp   存活endpoint列表
         * @param inactiveEp 非存活endpoint列表
         * @return:  0-成功  others-失败
         */
		int findObjectById4Any(string id, out vector<EndpointF> activeEp, out vector<EndpointF> inactiveEp);

        /** 根据id获取对象所有endpoint列表,功能同findObjectByIdInSameGroup
         *
         * @param id         对象名称
         * @param activeEp   存活endpoint列表
         * @param inactiveEp 非存活endpoint列表
         * @return:  0-成功  others-失败
         */
        int findObjectById4All(string id, out vector<EndpointF> activeEp, out vector<EndpointF> inactiveEp);
        
        /** 根据id获取对象同组endpoint列表
         *
         * @param id         对象名称
         * @param activeEp   存活endpoint列表
         * @param inactiveEp 非存活endpoint列表
         * @return:  0-成功  others-失败
         */
        int findObjectByIdInSameGroup(string id, out vector<EndpointF> activeEp, out vector<EndpointF> inactiveEp);


        /** 根据id获取对象指定归属地的endpoint列表
         *
         * @param id         对象名称
         * @param activeEp   存活endpoint列表
         * @param inactiveEp 非存活endpoint列表
         * @return:  0-成功  others-失败
         */
        int findObjectByIdInSameStation(string id, string sStation, out vector<EndpointF> activeEp, out vector<EndpointF> inactiveEp);
		
		/** 根据id获取对象同组endpoint列表
		*
		* @param id         对象名称
		* @param setId      set全称,格式为setname.setarea.setgroup
		* @param activeEp   存活endpoint列表
		* @param inactiveEp 非存活endpoint列表
		* @return:  0-成功  others-失败
		*/
		int findObjectByIdInSameSet(string id, string setId, out vector<EndpointF> activeEp, out vector<EndpointF> inactiveEp);

    };

};