// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.7.2.
// **********************************************************************

package com.qq.tars;

import com.qq.tars.protocol.tars.TarsInputStream;
import com.qq.tars.protocol.tars.TarsOutputStream;
import com.qq.tars.protocol.tars.annotation.TarsStruct;
import com.qq.tars.protocol.tars.annotation.TarsStructProperty;
import com.qq.tars.protocol.util.TarsUtil;

@TarsStruct
public class Condition {

	@TarsStructProperty(order = 0, isRequire = true)
	public String field = "";
	@TarsStructProperty(order = 1, isRequire = true)
	public int op = 0;
	@TarsStructProperty(order = 2, isRequire = true)
	public String val = "";

	public String getField() {
		return field;
	}

	public void setField(String field) {
		this.field = field;
	}

	public int getOp() {
		return op;
	}

	public void setOp(int op) {
		this.op = op;
	}

	public String getVal() {
		return val;
	}

	public void setVal(String val) {
		this.val = val;
	}

	public Condition() {
	}

	public Condition(String field, int op, String val) {
		this.field = field;
		this.op = op;
		this.val = val;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(field);
		result = prime * result + TarsUtil.hashCode(op);
		result = prime * result + TarsUtil.hashCode(val);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof Condition)) {
			return false;
		}
		Condition other = (Condition) obj;
		return (
			TarsUtil.equals(field, other.field) &&
			TarsUtil.equals(op, other.op) &&
			TarsUtil.equals(val, other.val) 
		);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("Condition(");
		sb.append("field:");
		if (this.field == null) {
			sb.append("null");
		} else {
			sb.append(this.field);
		}
		sb.append(", ");
		sb.append("op:");
		sb.append(this.op);
		sb.append(", ");
		sb.append("val:");
		if (this.val == null) {
			sb.append("null");
		} else {
			sb.append(this.val);
		}
		sb.append(")");
		return sb.toString();
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(field, 0);
		_os.write(op, 1);
		_os.write(val, 2);
	}


	public void readFrom(TarsInputStream _is) {
		this.field = _is.readString(0, true);
		this.op = _is.read(op, 1, true);
		this.val = _is.readString(2, true);
	}

}
